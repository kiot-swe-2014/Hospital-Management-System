/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package HospitalManagementSystem;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Software Engineers
 */
public class FullPatientHistory extends javax.swing.JFrame {

    /**
     * Creates new form FullPatientHistory
     */
    public FullPatientHistory() {
        initComponents();
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fullRecordTable = new javax.swing.JTable();
        closeButton = new javax.swing.JButton();
        showButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(4665, 3468));

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(0, 255, 255));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Full Patient History");

        fullRecordTable.setBackground(new java.awt.Color(153, 255, 255));
        fullRecordTable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        fullRecordTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Phone Number", "Age", "Sex", "Address", "Any Disease", "Symptom", "Diagnosis", "Medicine", "Ward Required?", "Ward Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        fullRecordTable.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                fullRecordTableComponentShown(evt);
            }
        });
        jScrollPane1.setViewportView(fullRecordTable);

        closeButton.setBackground(new java.awt.Color(255, 51, 51));
        closeButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        closeButton.setText("close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        showButton.setBackground(new java.awt.Color(255, 255, 153));
        showButton.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        showButton.setForeground(new java.awt.Color(0, 0, 255));
        showButton.setText("Click Here To Show Information");
        showButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(633, 633, 633)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(745, 745, 745)
                        .addComponent(showButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1553, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(97, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(closeButton)
                .addGap(340, 340, 340))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showButton)
                .addGap(54, 54, 54)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(closeButton)
                .addGap(88, 88, 88))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fullRecordTableComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_fullRecordTableComponentShown

          
        // TODO add your handling code here:
    }//GEN-LAST:event_fullRecordTableComponentShown

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        setVisible(false);    
        new DoctorPage().setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_closeButtonActionPerformed

    private void showButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showButtonActionPerformed
             String query = "SELECT   patient.patientId, patient.patientName, patient.patientPhone,"
                        + "patient.patientAge,patient.patientSex,patient.patientAddress,patient.patientDisease,"
                        + "patientinformation.symptom,patientinformation.diagnosis,patientinformation.medicine,patientinformation.wardRequired,"
                        + "patientinformation.wardType"
                        + " FROM patient INNER JOIN patientinformation ON patient.patientId = patientinformation.patientId";

    try (Connection connection = JDBCconn.startConnection();
         PreparedStatement preparedStatement = connection.prepareStatement(query);
         ResultSet result = preparedStatement.executeQuery()) {
        
        String[] columnNames = {"Id", "Name", "Phone Number", "Age", "Sex", "Address", "Any Disease", "Symptom", "Diagnosis", "Medicine", "Ward Required?", "Ward type"};
        DefaultTableModel tableModel = new DefaultTableModel(columnNames, 0);

        while (result.next()) {
            Object[] rowData = {
                result.getInt("patientId"),
                result.getString("patientName"),
                result.getString("patientPhone"),
                result.getInt("patientAge"),
                result.getString("patientSex"),
                result.getString("patientAddress"),
                result.getString("patientDisease"),      
                result.getString("symptom"),
                result.getString("diagnosis"),
                result.getString("medicine"),
                result.getString("wardRequired"),
                result.getString("wardType"),
            };
            tableModel.addRow(rowData);
        }

        // Set the model to the JTable
        fullRecordTable.setModel(tableModel);

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Connection error: " + e.getMessage());
        e.printStackTrace();
    }
 // TODO add your handling code here:
    }//GEN-LAST:event_showButtonActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FullPatientHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FullPatientHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FullPatientHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FullPatientHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FullPatientHistory().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JTable fullRecordTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton showButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
